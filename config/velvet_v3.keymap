#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt { tapping-term-ms = <400>; };

/ {
    combos {
        compatible = "zmk,combos";

        plus {
            bindings = <&kp PLUS>;
            key-positions = <2 3>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <3 4>;
        };

        LeftParenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <4 5>;
        };

        RightParenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <6 7>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <7 8>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <8 9>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <14 15>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <2 1>;
        };

        LeftBra {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <16 17>;
        };

        RightBra {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <18 19>;
        };

        DoubleQuotes {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <15 16>;
        };

        Apostrophe {
            bindings = <&kp SQT>;
            key-positions = <19 20>;
        };

        LeftBrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <28 29>;
        };

        RightBrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <30 31>;
        };

        shiftr {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <31 32>;
        };

        shiftl {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <27 28>;
        };

        ctrl_l {
            bindings = <&kp LCTRL>;
            key-positions = <26 27>;
        };

        ctrl {
            bindings = <&kp RCTRL>;
            key-positions = <32 33>;
        };

        command_l {
            bindings = <&kp LEFT_COMMAND>;
            key-positions = <36 37>;
        };

        command {
            bindings = <&kp LEFT_COMMAND>;
            key-positions = <44 45>;
        };

        alt {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <33 34>;
        };

        alt_l {
            bindings = <&kp LEFT_ALT>;
            key-positions = <26 25>;
        };
    };

    macros {
        cmd_F5: cmd_F5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI &kp F5>;
            label = "CMD_F5";
        };

        cmd_F6: cmd_F6 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI &kp F6>;
            label = "CMD_F6";
        };

        cmd_F11: cmd_F11 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI &kp F11>;
            label = "CMD_F11";
        };

        cmd_F12: cmd_F12 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI &kp F12>;
            label = "CMD_F12";
        };

        LAYER: LAYER {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "LAYER";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp ESC    &kp Q  &kp W       &kp E        &kp R                           &kp T                                 &kp Y            &kp U                        &kp I         &kp O         &kp P          &kp DELETE
&kp TAB    &kp A  &kp S       &kp D        &kp F                           &kp G                                 &kp H            &kp J                        &kp K         &kp L         &kp SEMI       &kp DOUBLE_QUOTES
&kp LSHFT  &kp Z  &kp X       &kp C        &kp V                           &kp B                                 &kp N            &kp M                        &kp COMMA     &kp DOT       &kp BACKSLASH  &kp SLASH
                  &kp LG(F5)  &kp LG(F12)  &mt RIGHT_ALT RC(LEFT_BRACKET)  &mo 1  &mt LCMD ENTER    &lt 2 SPACE  &lt 3 BACKSPACE  &mt RCTRL RC(RIGHT_BRACKET)  &kp C_VOL_DN  &kp C_VOL_UP
            >;

            label = "Base";
        };

        lower {
            bindings = <
&kp TILDE         &kp N1           &kp N2       &kp N3         &kp N4        &kp N5                                    &kp N6         &kp N7               &kp N8                &kp N9                &kp N0                 &kp MINUS
&kp SQT           &kp EXCLAMATION  &kp AT_SIGN  &kp HASH       &kp DOLLAR    &kp PERCENT                               &kp CARET      &kp AMPERSAND        &kp ASTERISK          &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL
&kp K_CALCULATOR  &kp PRINTSCREEN  &kp SLASH    &kp BACKSLASH  &kp QUESTION  &none                                     &kp CLCK       &kp LC(LEFT)         &kp PAGE_DOWN         &kp PAGE_UP           &kp LC(RIGHT)          &kp DELETE
                                   &trans       &trans         &mo 4         &LAYER       &kp LEFT_SHIFT    &kp SPACE  &kp BACKSPACE  &mt RA(L) RIGHT_ALT  &kp NON_US_BACKSLASH  &trans
            >;

            label = "lower";
        };

        raise {
            bindings = <
&trans  &trans  &kp PAGE_UP     &kp UP_ARROW    &kp PAGE_DOWN               &kp HOME                       &kp CARET      &kp PAGE_UP          &kp UP_ARROW  &kp PAGE_DOWN  &kp HOME  &trans
&trans  &none   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW             &kp END                        &kp MINUS      &kp LEFT             &kp DOWN      &kp RIGHT      &kp END   &none
&trans  &trans  &cmd_F5         &cmd_F6         &cmd_F11                    &cmd_F12                       &none          &none                &none         &none          &trans    &trans
                &trans          &trans          &mt LEFT_CONTROL LC(RS(L))  &none     &kp ENTER    &LAYER  &kp BACKSPACE  &mt RIGHT_ALT RA(L)  &trans        &trans
            >;

            label = "raise";
        };

        fbuttons {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5        &kp F6                                      &kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6
&kp F7  &kp F8  &kp F9  &kp F10  &kp F11       &kp F12                                     &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans   &kp LEFT_ALT  &trans                                      &trans  &trans  &trans  &trans   &trans   &trans
                &trans  &trans   &kp LCTRL     &kp LEFT_SHIFT  &kp LEFT_COMMAND    &trans  &LAYER  &trans  &trans  &trans
            >;

            label = "fbuttons";
        };

        Adjust {
            bindings = <
&bootloader  &none         &none         &none         &none         &sys_reset                    &none         &none         &kp C_MUTE        &none         &none  &none
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &out OUT_BLE  &kp C_VOL_DN  &kp K_MUTE        &kp C_VOL_UP  &none  &none
&none        &none         &none         &none         &none         &none                         &out OUT_USB  &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT    &none  &none
                           &none         &none         &LAYER        &LAYER        &none    &none  &none         &none         &none             &none
            >;

            label = "Adjust";
        };

        User1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            label = "User1";
        };

        User2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            label = "User2";
        };

        User3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            label = "User3";
        };
    };
};
